{"ast":null,"code":"// Generated by purs version 0.13.8\n\"use strict\";\n\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\n\nvar Control_Apply = require(\"../Control.Apply/index.js\");\n\nvar Control_Bind = require(\"../Control.Bind/index.js\");\n\nvar Control_Monad = require(\"../Control.Monad/index.js\");\n\nvar Control_Monad_Reader_Class = require(\"../Control.Monad.Reader.Class/index.js\");\n\nvar Control_Monad_Trans_Class = require(\"../Control.Monad.Trans.Class/index.js\");\n\nvar Data_Function = require(\"../Data.Function/index.js\");\n\nvar Data_Functor = require(\"../Data.Functor/index.js\");\n\nvar Effect_Class = require(\"../Effect.Class/index.js\");\n\nvar ReaderT = function (x) {\n  return x;\n};\n\nvar runReaderT = function (v) {\n  return v;\n};\n\nvar monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {\n  return function ($98) {\n    return ReaderT(Data_Function[\"const\"]($98));\n  };\n});\n\nvar mapReaderT = function (f) {\n  return function (v) {\n    return function ($99) {\n      return f(v($99));\n    };\n  };\n};\n\nvar functorReaderT = function (dictFunctor) {\n  return new Data_Functor.Functor(function () {\n    var $100 = Data_Functor.map(dictFunctor);\n    return function ($101) {\n      return mapReaderT($100($101));\n    };\n  }());\n};\n\nvar applyReaderT = function (dictApply) {\n  return new Control_Apply.Apply(function ($dollar__unused) {\n    return functorReaderT(dictApply.Functor0());\n  }, function (v) {\n    return function (v1) {\n      return function (r) {\n        return Control_Apply.apply(dictApply)(v(r))(v1(r));\n      };\n    };\n  });\n};\n\nvar bindReaderT = function (dictBind) {\n  return new Control_Bind.Bind(function ($dollar__unused) {\n    return applyReaderT(dictBind.Apply0());\n  }, function (v) {\n    return function (k) {\n      return function (r) {\n        return Control_Bind.bind(dictBind)(v(r))(function (a) {\n          var v1 = k(a);\n          return v1(r);\n        });\n      };\n    };\n  });\n};\n\nvar applicativeReaderT = function (dictApplicative) {\n  return new Control_Applicative.Applicative(function ($dollar__unused) {\n    return applyReaderT(dictApplicative.Apply0());\n  }, function () {\n    var $102 = Control_Applicative.pure(dictApplicative);\n    return function ($103) {\n      return ReaderT(Data_Function[\"const\"]($102($103)));\n    };\n  }());\n};\n\nvar monadReaderT = function (dictMonad) {\n  return new Control_Monad.Monad(function ($dollar__unused) {\n    return applicativeReaderT(dictMonad.Applicative0());\n  }, function ($dollar__unused) {\n    return bindReaderT(dictMonad.Bind1());\n  });\n};\n\nvar monadAskReaderT = function (dictMonad) {\n  return new Control_Monad_Reader_Class.MonadAsk(function ($dollar__unused) {\n    return monadReaderT(dictMonad);\n  }, Control_Applicative.pure(dictMonad.Applicative0()));\n};\n\nvar monadEffectReader = function (dictMonadEffect) {\n  return new Effect_Class.MonadEffect(function ($dollar__unused) {\n    return monadReaderT(dictMonadEffect.Monad0());\n  }, function () {\n    var $104 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());\n    var $105 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($106) {\n      return $104($105($106));\n    };\n  }());\n};\n\nmodule.exports = {\n  ReaderT: ReaderT,\n  runReaderT: runReaderT,\n  mapReaderT: mapReaderT,\n  functorReaderT: functorReaderT,\n  applyReaderT: applyReaderT,\n  applicativeReaderT: applicativeReaderT,\n  bindReaderT: bindReaderT,\n  monadReaderT: monadReaderT,\n  monadTransReaderT: monadTransReaderT,\n  monadEffectReader: monadEffectReader,\n  monadAskReaderT: monadAskReaderT\n};","map":null,"metadata":{},"sourceType":"script"}