{"ast":null,"code":"// Generated by purs version 0.13.8\n\"use strict\";\n\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\n\nvar Data_Either = require(\"../Data.Either/index.js\");\n\nvar Data_Functor = require(\"../Data.Functor/index.js\");\n\nvar MonadThrow = function MonadThrow(Monad0, throwError) {\n  this.Monad0 = Monad0;\n  this.throwError = throwError;\n};\n\nvar MonadError = function MonadError(MonadThrow0, catchError) {\n  this.MonadThrow0 = MonadThrow0;\n  this.catchError = catchError;\n};\n\nvar throwError = function throwError(dict) {\n  return dict.throwError;\n};\n\nvar catchError = function catchError(dict) {\n  return dict.catchError;\n};\n\nvar $$try = function $$try(dictMonadError) {\n  return function (a) {\n    return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function () {\n      var $66 = Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0());\n      return function ($67) {\n        return $66(Data_Either.Left.create($67));\n      };\n    }());\n  };\n};\n\nmodule.exports = {\n  catchError: catchError,\n  throwError: throwError,\n  MonadThrow: MonadThrow,\n  MonadError: MonadError,\n  \"try\": $$try\n};","map":null,"metadata":{},"sourceType":"script"}