{"ast":null,"code":"\"use strict\";\n\nvar React = require(\"react\");\n\nvar useEqCache = function useEqCache(eq, a) {\n  var memoRef = React.useRef(a);\n\n  if (memoRef.current !== a && !eq(memoRef.current, a)) {\n    memoRef.current = a;\n  }\n\n  return memoRef.current;\n};\n\nexports.useState_ = function (tuple, initialState) {\n  var r = React.useState(initialState);\n  var state = r[0];\n  var setState = r[1];\n\n  if (!setState.hasOwnProperty(\"$$reactBasicHooks$$cachedSetState\")) {\n    setState.$$reactBasicHooks$$cachedSetState = function (update) {\n      return function () {\n        return setState(update);\n      };\n    };\n  }\n\n  return tuple(state, setState.$$reactBasicHooks$$cachedSetState);\n};\n\nexports.useEffect_ = function (eq, deps, effect) {\n  var memoizedKey = useEqCache(eq, deps);\n  React.useEffect(effect, [memoizedKey]);\n};\n\nexports.useContext_ = React.useContext;\n\nexports.unsafeSetDisplayName = function (displayName, component) {\n  component.displayName = displayName;\n\n  component.toString = function () {\n    return displayName;\n  };\n\n  return component;\n};","map":null,"metadata":{},"sourceType":"script"}