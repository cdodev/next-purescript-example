{"ast":null,"code":"\"use strict\";\n\nconst React = require(\"react\");\n\nconst useEqCache = (eq, a) => {\n  const memoRef = React.useRef(a);\n\n  if (memoRef.current !== a && !eq(memoRef.current, a)) {\n    memoRef.current = a;\n  }\n\n  return memoRef.current;\n};\n\nexports.useState_ = (tuple, initialState) => {\n  const r = React.useState(initialState);\n  const state = r[0];\n  const setState = r[1];\n\n  if (!setState.hasOwnProperty(\"$$reactBasicHooks$$cachedSetState\")) {\n    setState.$$reactBasicHooks$$cachedSetState = update => () => setState(update);\n  }\n\n  return tuple(state, setState.$$reactBasicHooks$$cachedSetState);\n};\n\nexports.useEffect_ = (eq, deps, effect) => {\n  const memoizedKey = useEqCache(eq, deps);\n  React.useEffect(effect, [memoizedKey]);\n};\n\nexports.useContext_ = React.useContext;\n\nexports.unsafeSetDisplayName = (displayName, component) => {\n  component.displayName = displayName;\n\n  component.toString = () => displayName;\n\n  return component;\n};","map":null,"metadata":{},"sourceType":"script"}