{"ast":null,"code":"// Generated by purs version 0.13.8\n\"use strict\";\n\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\n\nvar Control_Apply = require(\"../Control.Apply/index.js\");\n\nvar Control_Bind = require(\"../Control.Bind/index.js\");\n\nvar Control_Category = require(\"../Control.Category/index.js\");\n\nvar Data_Eq = require(\"../Data.Eq/index.js\");\n\nvar Data_Functor = require(\"../Data.Functor/index.js\");\n\nvar Nothing = function () {\n  function Nothing() {}\n\n  ;\n  Nothing.value = new Nothing();\n  return Nothing;\n}();\n\nvar Just = function () {\n  function Just(value0) {\n    this.value0 = value0;\n  }\n\n  ;\n\n  Just.create = function (value0) {\n    return new Just(value0);\n  };\n\n  return Just;\n}();\n\nvar maybe = function (v) {\n  return function (v1) {\n    return function (v2) {\n      if (v2 instanceof Nothing) {\n        return v;\n      }\n\n      ;\n\n      if (v2 instanceof Just) {\n        return v1(v2.value0);\n      }\n\n      ;\n      throw new Error(\"Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): \" + [v.constructor.name, v1.constructor.name, v2.constructor.name]);\n    };\n  };\n};\n\nvar functorMaybe = new Data_Functor.Functor(function (v) {\n  return function (v1) {\n    if (v1 instanceof Just) {\n      return new Just(v(v1.value0));\n    }\n\n    ;\n    return Nothing.value;\n  };\n});\n\nvar fromMaybe = function (a) {\n  return maybe(a)(Control_Category.identity(Control_Category.categoryFn));\n};\n\nvar eqMaybe = function (dictEq) {\n  return new Data_Eq.Eq(function (x) {\n    return function (y) {\n      if (x instanceof Nothing && y instanceof Nothing) {\n        return true;\n      }\n\n      ;\n\n      if (x instanceof Just && y instanceof Just) {\n        return Data_Eq.eq(dictEq)(x.value0)(y.value0);\n      }\n\n      ;\n      return false;\n    };\n  });\n};\n\nvar applyMaybe = new Control_Apply.Apply(function ($dollar__unused) {\n  return functorMaybe;\n}, function (v) {\n  return function (v1) {\n    if (v instanceof Just) {\n      return Data_Functor.map(functorMaybe)(v.value0)(v1);\n    }\n\n    ;\n\n    if (v instanceof Nothing) {\n      return Nothing.value;\n    }\n\n    ;\n    throw new Error(\"Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): \" + [v.constructor.name, v1.constructor.name]);\n  };\n});\nvar bindMaybe = new Control_Bind.Bind(function ($dollar__unused) {\n  return applyMaybe;\n}, function (v) {\n  return function (v1) {\n    if (v instanceof Just) {\n      return v1(v.value0);\n    }\n\n    ;\n\n    if (v instanceof Nothing) {\n      return Nothing.value;\n    }\n\n    ;\n    throw new Error(\"Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): \" + [v.constructor.name, v1.constructor.name]);\n  };\n});\nvar applicativeMaybe = new Control_Applicative.Applicative(function ($dollar__unused) {\n  return applyMaybe;\n}, Just.create);\nmodule.exports = {\n  Nothing: Nothing,\n  Just: Just,\n  maybe: maybe,\n  fromMaybe: fromMaybe,\n  functorMaybe: functorMaybe,\n  applyMaybe: applyMaybe,\n  applicativeMaybe: applicativeMaybe,\n  bindMaybe: bindMaybe,\n  eqMaybe: eqMaybe\n};","map":null,"metadata":{},"sourceType":"script"}