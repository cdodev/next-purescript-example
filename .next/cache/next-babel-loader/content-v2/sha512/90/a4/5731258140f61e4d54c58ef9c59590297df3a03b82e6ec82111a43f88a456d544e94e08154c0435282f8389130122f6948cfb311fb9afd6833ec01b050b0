{"ast":null,"code":"// Generated by purs version 0.13.8\n\"use strict\";\n\nvar Data_Either = require(\"../Data.Either/index.js\");\n\nvar Data_Show = require(\"../Data.Show/index.js\");\n\nvar OPTIONS = function () {\n  function OPTIONS() {}\n\n  ;\n  OPTIONS.value = new OPTIONS();\n  return OPTIONS;\n}();\n\nvar GET = function () {\n  function GET() {}\n\n  ;\n  GET.value = new GET();\n  return GET;\n}();\n\nvar HEAD = function () {\n  function HEAD() {}\n\n  ;\n  HEAD.value = new HEAD();\n  return HEAD;\n}();\n\nvar POST = function () {\n  function POST() {}\n\n  ;\n  POST.value = new POST();\n  return POST;\n}();\n\nvar PUT = function () {\n  function PUT() {}\n\n  ;\n  PUT.value = new PUT();\n  return PUT;\n}();\n\nvar DELETE = function () {\n  function DELETE() {}\n\n  ;\n  DELETE.value = new DELETE();\n  return DELETE;\n}();\n\nvar TRACE = function () {\n  function TRACE() {}\n\n  ;\n  TRACE.value = new TRACE();\n  return TRACE;\n}();\n\nvar CONNECT = function () {\n  function CONNECT() {}\n\n  ;\n  CONNECT.value = new CONNECT();\n  return CONNECT;\n}();\n\nvar PROPFIND = function () {\n  function PROPFIND() {}\n\n  ;\n  PROPFIND.value = new PROPFIND();\n  return PROPFIND;\n}();\n\nvar PROPPATCH = function () {\n  function PROPPATCH() {}\n\n  ;\n  PROPPATCH.value = new PROPPATCH();\n  return PROPPATCH;\n}();\n\nvar MKCOL = function () {\n  function MKCOL() {}\n\n  ;\n  MKCOL.value = new MKCOL();\n  return MKCOL;\n}();\n\nvar COPY = function () {\n  function COPY() {}\n\n  ;\n  COPY.value = new COPY();\n  return COPY;\n}();\n\nvar MOVE = function () {\n  function MOVE() {}\n\n  ;\n  MOVE.value = new MOVE();\n  return MOVE;\n}();\n\nvar LOCK = function () {\n  function LOCK() {}\n\n  ;\n  LOCK.value = new LOCK();\n  return LOCK;\n}();\n\nvar UNLOCK = function () {\n  function UNLOCK() {}\n\n  ;\n  UNLOCK.value = new UNLOCK();\n  return UNLOCK;\n}();\n\nvar PATCH = function () {\n  function PATCH() {}\n\n  ;\n  PATCH.value = new PATCH();\n  return PATCH;\n}();\n\nvar CustomMethod = function (x) {\n  return x;\n};\n\nvar unCustomMethod = function (v) {\n  return v;\n};\n\nvar showMethod = new Data_Show.Show(function (v) {\n  if (v instanceof OPTIONS) {\n    return \"OPTIONS\";\n  }\n\n  ;\n\n  if (v instanceof GET) {\n    return \"GET\";\n  }\n\n  ;\n\n  if (v instanceof HEAD) {\n    return \"HEAD\";\n  }\n\n  ;\n\n  if (v instanceof POST) {\n    return \"POST\";\n  }\n\n  ;\n\n  if (v instanceof PUT) {\n    return \"PUT\";\n  }\n\n  ;\n\n  if (v instanceof DELETE) {\n    return \"DELETE\";\n  }\n\n  ;\n\n  if (v instanceof TRACE) {\n    return \"TRACE\";\n  }\n\n  ;\n\n  if (v instanceof CONNECT) {\n    return \"CONNECT\";\n  }\n\n  ;\n\n  if (v instanceof PROPFIND) {\n    return \"PROPFIND\";\n  }\n\n  ;\n\n  if (v instanceof PROPPATCH) {\n    return \"PROPPATCH\";\n  }\n\n  ;\n\n  if (v instanceof MKCOL) {\n    return \"MKCOL\";\n  }\n\n  ;\n\n  if (v instanceof COPY) {\n    return \"COPY\";\n  }\n\n  ;\n\n  if (v instanceof MOVE) {\n    return \"MOVE\";\n  }\n\n  ;\n\n  if (v instanceof LOCK) {\n    return \"LOCK\";\n  }\n\n  ;\n\n  if (v instanceof UNLOCK) {\n    return \"UNLOCK\";\n  }\n\n  ;\n\n  if (v instanceof PATCH) {\n    return \"PATCH\";\n  }\n\n  ;\n  throw new Error(\"Failed pattern match at Data.HTTP.Method (line 43, column 1 - line 59, column 23): \" + [v.constructor.name]);\n});\nvar print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);\nmodule.exports = {\n  OPTIONS: OPTIONS,\n  GET: GET,\n  HEAD: HEAD,\n  POST: POST,\n  PUT: PUT,\n  DELETE: DELETE,\n  TRACE: TRACE,\n  CONNECT: CONNECT,\n  PROPFIND: PROPFIND,\n  PROPPATCH: PROPPATCH,\n  MKCOL: MKCOL,\n  COPY: COPY,\n  MOVE: MOVE,\n  LOCK: LOCK,\n  UNLOCK: UNLOCK,\n  PATCH: PATCH,\n  unCustomMethod: unCustomMethod,\n  print: print,\n  showMethod: showMethod\n};","map":null,"metadata":{},"sourceType":"script"}