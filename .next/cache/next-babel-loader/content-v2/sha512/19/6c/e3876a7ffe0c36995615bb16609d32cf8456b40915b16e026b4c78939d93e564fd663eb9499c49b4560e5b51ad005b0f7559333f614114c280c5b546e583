{"ast":null,"code":"// Generated by purs version 0.13.8\n\"use strict\";\n\nvar $foreign = require(\"./foreign.js\");\n\nvar Control_Applicative = require(\"../Control.Applicative/index.js\");\n\nvar Control_Monad_Error_Class = require(\"../Control.Monad.Error.Class/index.js\");\n\nvar Control_Monad_Except_Trans = require(\"../Control.Monad.Except.Trans/index.js\");\n\nvar Data_Boolean = require(\"../Data.Boolean/index.js\");\n\nvar Data_List_NonEmpty = require(\"../Data.List.NonEmpty/index.js\");\n\nvar Data_Show = require(\"../Data.Show/index.js\");\n\nvar Unsafe_Coerce = require(\"../Unsafe.Coerce/index.js\");\n\nvar ForeignError = function () {\n  function ForeignError(value0) {\n    this.value0 = value0;\n  }\n\n  ;\n\n  ForeignError.create = function (value0) {\n    return new ForeignError(value0);\n  };\n\n  return ForeignError;\n}();\n\nvar TypeMismatch = function () {\n  function TypeMismatch(value0, value1) {\n    this.value0 = value0;\n    this.value1 = value1;\n  }\n\n  ;\n\n  TypeMismatch.create = function (value0) {\n    return function (value1) {\n      return new TypeMismatch(value0, value1);\n    };\n  };\n\n  return TypeMismatch;\n}();\n\nvar ErrorAtIndex = function () {\n  function ErrorAtIndex(value0, value1) {\n    this.value0 = value0;\n    this.value1 = value1;\n  }\n\n  ;\n\n  ErrorAtIndex.create = function (value0) {\n    return function (value1) {\n      return new ErrorAtIndex(value0, value1);\n    };\n  };\n\n  return ErrorAtIndex;\n}();\n\nvar ErrorAtProperty = function () {\n  function ErrorAtProperty(value0, value1) {\n    this.value0 = value0;\n    this.value1 = value1;\n  }\n\n  ;\n\n  ErrorAtProperty.create = function (value0) {\n    return function (value1) {\n      return new ErrorAtProperty(value0, value1);\n    };\n  };\n\n  return ErrorAtProperty;\n}();\n\nvar unsafeToForeign = Unsafe_Coerce.unsafeCoerce;\nvar unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;\n\nvar renderForeignError = function renderForeignError(v) {\n  if (v instanceof ForeignError) {\n    return v.value0;\n  }\n\n  ;\n\n  if (v instanceof ErrorAtIndex) {\n    return \"Error at array index \" + (Data_Show.show(Data_Show.showInt)(v.value0) + (\": \" + renderForeignError(v.value1)));\n  }\n\n  ;\n\n  if (v instanceof ErrorAtProperty) {\n    return \"Error at property \" + (Data_Show.show(Data_Show.showString)(v.value0) + (\": \" + renderForeignError(v.value1)));\n  }\n\n  ;\n\n  if (v instanceof TypeMismatch) {\n    return \"Type mismatch: expected \" + (v.value0 + (\", found \" + v.value1));\n  }\n\n  ;\n  throw new Error(\"Failed pattern match at Foreign (line 73, column 1 - line 73, column 45): \" + [v.constructor.name]);\n};\n\nvar fail = function fail(dictMonad) {\n  var $234 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad));\n  return function ($235) {\n    return $234(Data_List_NonEmpty.singleton($235));\n  };\n};\n\nvar unsafeReadTagged = function unsafeReadTagged(dictMonad) {\n  return function (tag) {\n    return function (value) {\n      if ($foreign.tagOf(value) === tag) {\n        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));\n      }\n\n      ;\n\n      if (Data_Boolean.otherwise) {\n        return fail(dictMonad)(new TypeMismatch(tag, $foreign.tagOf(value)));\n      }\n\n      ;\n      throw new Error(\"Failed pattern match at Foreign (line 110, column 1 - line 110, column 71): \" + [tag.constructor.name, value.constructor.name]);\n    };\n  };\n};\n\nmodule.exports = {\n  ForeignError: ForeignError,\n  TypeMismatch: TypeMismatch,\n  ErrorAtIndex: ErrorAtIndex,\n  ErrorAtProperty: ErrorAtProperty,\n  renderForeignError: renderForeignError,\n  unsafeToForeign: unsafeToForeign,\n  unsafeFromForeign: unsafeFromForeign,\n  unsafeReadTagged: unsafeReadTagged,\n  fail: fail,\n  tagOf: $foreign.tagOf\n};","map":null,"metadata":{},"sourceType":"script"}